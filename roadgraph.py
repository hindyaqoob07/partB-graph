# -*- coding: utf-8 -*-
"""roadgraph

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uJD1BxILZ90c3PQdxlHwM8QRST1G0zXB
"""

import networkx as nx # import the networkx library for working with graphs
import matplotlib.pyplot as plt # import the matplotlib.pyplot library for visualization

# we create a graph
G = nx.Graph()

#This defines intersections & roads based on the corresponding one
intersections = {
    "Z1": "Sheikh Zayed Road", "Z2": "Sheikh Mohammed Bin Zayed Road", "Z3": "Dubai-Al Ain Road",
    "K1": "Al Khail Road", "K2": "Emirates Road",
    "DA1": "Dubai-Al Ain Road", "DA2": "Emirates Road",
    "E1": "Dubai-Al Ain Road", "E2": "Al Khail Road",
    "MBZ1": "Sheikh Zayed Road",
    "JB1": "Al Wasl Road", "JB2": "Al Safa Street", "JB3": "Sheikh Zayed Road", "JB4": "Umm Suqeim Road",
    "W1": "Sheikh Zayed Road", "W2": "Jumeirah Beach Road", "W3": "Al Khail Road", "W4": "Umm Suqeim Road",
    "S1": "Jumeirah Beach Road", "S2": "Sheikh Zayed Road",
    "US1": "Sheikh Zayed Road", "US2": "Al Wasl Road",
    "AS1": "Sheikh Zayed Road", "AS2": "Al Khail Road",
    "Q1": "Emirates Road", "Q2": "Jebel Ali-Lahbab Road",
    "AB1": "Sheikh Zayed Road", "AB2": "Al Khail Road",
    "AD1": "Sheikh Zayed Road", "AD2": "Al Wasl Road",
    "H1": "Sheikh Zayed Road", "H2": "Al Khail Road",
    "AM1": "Sheikh Zayed Road", "AM2": "Al Wasl Road",
    "K1": "Emirates Road", "K2": "Dubai-Hatta Road",
    "JR1": "Emirates Road", "JR2": "Al Qudra Road",
    "MS1": "Sheikh Zayed Road", "MS2": "Al Khail Road",
    "DSC1": "Sheikh Mohammed Bin Zayed Road", "DSC2": "Emirates Road",
    "AF1": "Sheikh Zayed Road", "AF2": "Emirates Road"
}
#This defines the roads with the corresponding weights which represent the average travel time in minutes
roads_with_weights = [
    ("Z1", "K1", 17), ("Z1", "MBZ1", 20), ("Z1", "DA1", 46),
    ("K1", "Z1", 13), ("K1", "E2", 14),
    ("DA1", "Z1", 50), ("DA1", "E2", 35),
    ("E1", "DA1", 28), ("E1", "K1", 17),
    ("MBZ1", "Z1", 21),
    ("JB1", "W1", 8), ("JB1", "S1", 12), ("JB1", "Z1", 18), ("JB1", "US1", 17),
    ("W1", "Z1", 13), ("W1", "JB2", 4), ("W1", "K1", 12), ("W1", "US2", 11),
    ("S1", "JB1", 9), ("S1", "Z1", 16),
    ("US1", "Z1", 11), ("US1", "W2", 13),
    ("AS1", "Z1", 6), ("AS1", "K1", 13),
    ("Q1", "E1", 25), ("Q1", "JR2", 23),
    ("AB1", "Z1", 13), ("AB1", "K1", 12),
    ("AD1", "Z1", 16), ("AD1", "W2", 9),
    ("H1", "Z1", 13), ("H1", "K1", 10),
    ("AM1", "Z1", 10), ("AM1", "W2", 9),
    ("E1", "K2", 14), ("K2", "K1", 35),
    ("JR1", "E1", 22), ("JR1", "Q2", 12),
    ("MS1", "Z1", 15), ("MS1", "K1", 10),
    ("DSC1", "MBZ1", 8), ("DSC1", "E1", 8),
    ("AF1", "Z1", 15), ("AF1", "E1", 16)
]

# This line add roads as edges with weights
for edge in roads_with_weights:#this line uses a foor loop which iterates over the roads_with_weights
    G.add_edge(edge[0], edge[1], weight=edge[2])

# This line draws the graph
plt.figure(figsize=(20, 15)) #This line creates a new figure with a specific size for the plot
pos = nx.spring_layout(G, seed=42)  # This line computes node positions using the spring layout algorithm
nx.draw_networkx_nodes(G, pos, node_size=3000, node_color='lightgrey')  # This line draws nodes with specified size and color
nx.draw_networkx_edges(G, pos, width=2, alpha=0.6, edge_color='grey')  # This line draws edges with specified width and color
labels = nx.get_edge_attributes(G, 'weight')  # This line gets the edge labels (weights) from the graph
nx.draw_networkx_edge_labels(G, pos, edge_labels=labels, font_size=10)  # This line draws the edge labels with specified font size
nx.draw_networkx_labels(G, pos, font_size=10, font_weight='bold')  # This line draws the node labels with specified font size and weight
plt.title("City Road Network - Dubai Roads & Intersections")  # This line sets the title for the plot
plt.tight_layout()  # This line adjusts the layout to prevent overlapping elements
plt.show()  # This line displays the plot